1 iocp创建的工作线程按照LIFO的顺序排队，比如来一个完成包后，最后一个和iocp关联的线程将处理这个包。

2 当线程调用GetQueuedCompletionStatus后，才与完成端口关联。

3 IOCP完成端口内部有三个线程相关队列：
	等待线程队列（WaitingThread List-LIFO）：
      当线程中调用GetQueuedCompletionStatus函数时，操作系统会将该线程压入到等待* 线程队列中。
      为了减少线程切换，该队列是LIFO。当I/O完成队列非空，且工作线程并未超出总的并发数时，
      系统从等待线程队列中取出线程，该线程从自身代码的GetQueuedCompletoinStatus函数调用处返回并继续运行。
    释放线程队列（Released Thread List）：
      当操作系统从等待线程队列中激活了一个工作线程时，或者挂起的线程重新被激活时，
      该线程被压入释放线程队列中，也即这个队列的线程处于运行状态。
      这个队列中的线程有两个出队列的机会：
          一是当线程重新调用GetQueuedCompeltionStatus函数时，线程被添加到等待线程队列中；
          二是当线程调用其他函数使得线程挂起时，该线程被添加到挂起线程队列中。
    暂停线程队列（Paused Thread List）：
      释放线程队列中的线程被挂起的时候，线程被压入到挂起线程队列中；当挂起的线程重新被唤醒时，从挂起线程队列中取出放入到释放线程队列。

4 